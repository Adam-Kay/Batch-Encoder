# This is a basic workflow to help you get started with Actions

name: functionality

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths:
      - 'batch encoder.bat'
      - 'b-e updater.bat'
  pull_request:
    # branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job name
  encoder-vernum:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Move `batch encoder.bat`
        run: mv ".\batch encoder.bat" ".\.github\workflows\test\batch encoder.bat"
      
      - name: Download latest release information
        run: |
          cd .\.github\workflows\test\
          curl --silent -L -H "Accept: application/vnd.github+json" -o latestasset.json https://api.github.com/repos/Adam-Kay/Batch-Encoder/releases/latest

      - name: Compare version numbers
        run: |
          cd .\.github\workflows\test\
          $currver = (Select-String "(?<=set CurrentVersion=).*$" '.\batch encoder.bat').Matches.Value
          $latestvar = (Select-String "(?<=`"tag_name`": `").*(?=`")" .\latestasset.json).Matches.Value
          if ($currver -eq $latestvar) { throw "Current version ($currver) matches latest release version ($latestvar)!" }

  # Job name
  encoder-encode:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Extract FFmpeg
        run: |
          Expand-Archive .\.github\workflows\test\ffmpeg-essential.zip -DestinationPath .\.github\workflows\test\
          ls .\.github\workflows\test\

      - name: Input file exists
        run: if (!(Test-Path '.\.github\workflows\test\testvideo.mp4' -pathtype leaf)) { throw "Input file not present" }

      - name: Run `batch encoder.bat`
        run: |
          mv ".\batch encoder.bat" ".\.github\workflows\test\batch encoder.bat"
          cd .\.github\workflows\test\
          ls
          Invoke-Command -ScriptBlock {& ".\batch encoder.bat" --silent --update false --ffmpegloc ffmpeg.exe}
          
      - name: Output file exists
        run: if (!(Test-Path '.\.github\workflows\test\testvideo.ENC.mp4' -pathtype leaf)) { throw "Output file not present" }

      - name: Input file removed
        run: if (Test-Path '.\.github\workflows\test\testvideo.mp4' -pathtype leaf) { throw "Input file still present after encode" }
  
  # Job name
  encoder-update:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Extract FFmpeg
        run: |
          Expand-Archive .\.github\workflows\test\ffmpeg-essential.zip -DestinationPath .\.github\workflows\test\
          ls .\.github\workflows\test\

      - name: Remove input file
        run: rm '.\.github\workflows\test\testvideo.mp4'

      - name: Run `batch encoder.bat`
        run: |
          mv ".\batch encoder.bat" ".\.github\workflows\test\batch encoder.bat"
          cd .\.github\workflows\test\
          ls
          Invoke-Command -ScriptBlock {& ".\batch encoder.bat" --silent --update force --ffmpegloc ffmpeg.exe}
          
      - name: Updated program file exists
        run: |
          if (!(Test-Path '.\.github\workflows\test\batch encoder v*.bat' -pathtype leaf)) { throw "Updated program file not present" }

      - name: Old program file removed
        run: if (Test-Path '.\.github\workflows\test\batch encoder.bat' -pathtype leaf) { throw "Old program file still present after update" }

# Job name
  updater-update:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Run `b-e updater.bat`
        run: |
          mv ".\batch encoder.bat" ".\.github\workflows\test\batch encoder.bat"
          mv ".\b-e updater.bat" ".\.github\workflows\test\b-e updater.bat"
          cd .\.github\workflows\test\
          ls
          Invoke-Command -ScriptBlock {& ".\b-e updater.bat" --silent}
          
      - name: Updated program file exists
        run: if (!(Test-Path '.\.github\workflows\test\batch encoder v*.bat' -pathtype leaf)) { throw "Updated program file not present" }

      - name: Old program file removed
        run: if (Test-Path '.\.github\workflows\test\batch encoder.bat' -pathtype leaf) { throw "Old program file still present after update" }

      - name: Updater file removed
        run: if (Test-Path '.\.github\workflows\test\b-e updater.bat' -pathtype leaf) { throw "Updater file still present after update" }        
